# vim: set foldmethod=marker:

set-option -g prefix M-Space

# set-option -g prefix Super_L
# set-option -g base-index 1
set-option -g mouse on
set-option -g @continuum-restore 'on'

unbind-key -a
# unbind-key -an
# unbind-key -aT copy-mode
# unbind-key -aT copy-mode-vi

# if the window's last pane dies, respawn it
# https://stackoverflow.com/questions/51328827/is-it-possible-to-quit-tmux-while-keeping-the-window-in-the-terminal
# set -g remain-on-exit
# set-hook pane-died 'capture-pane -S - -E - ; save-buffer "$HOME/logs/tmux/tmux-saved.#{host_short}-#{session_id}:#{window_id}:#{pane_id}-#{pane_pid}-#{client_activity}.log"; delete-buffer; kill-pane'      
set-option -g remain-on-exit
set-hook -g pane-died "if-shell '[ $(tmux list-panes | wc -l) -eq 1 ]' respawn-pane kill-pane"

set-hook -g after-new-session "rename-window j; \
            new-window -n l; \
            new-window -n u; \
            new-window -n y; \
            new-window -n [; \
            new-window -n ]; \
            select-window -t j"

# keybindings/misc {{{

bind    M-Space send-prefix
bind -n M-\;     command-prompt
bind -n M-r     source-file ~/.tmux.conf \; display-message "sourced .tmux.conf"

# }}}

# keybindings/panes {{{

# courtesy of https://github.com/saysjonathan/dwm.tmux

# new pane (in current directory)
bind -n M-S-Enter split-window -t :.0 -c "#{pane_current_path}" \;\
                  swap-pane -s :.0 -t :.1 \;\
                  select-layout main-vertical \;\
                  run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""
# kill pane
bind -n M-w       kill-pane -t :. \;\
                  select-layout main-vertical \;\
                  run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\"" \;\
                  select-pane -t :.0
# previous/next pane
bind -n M-i       select-pane -t :.-
bind -n M-e       select-pane -t :.+
# resize pane
bind -n M-n       resize-pane -L 5
bind -n M-o       resize-pane -R 5
# make master pane
bind -n M-Enter   swap-pane -s :. -t :.0 \; select-pane -t :.0
# zoom pane
bind -n M-f       resize-pane -Z

# }}}

# keybindings/windows {{{

bind -n M-j select-window -t j
bind -n M-l select-window -t l
bind -n M-u select-window -t u
bind -n M-y select-window -t y
bind -n M-[ select-window -t [
bind -n M-] select-window -t ]

# }}}

# keybindings/sessions {{{

bind % command-prompt -I "#S" "rename-session '%%'"
bind d detach-client
bind s choose-tree -s

# }}}

# keybindings/plugins {{{


# bind U run-shell /home/kesav/.tmux/plugins/tpm/bindings/update_plugins
# bind C run-shell /home/kesav/.tmux/plugins/tpm/bindings/clean_plugins

# }}}

# keybindings/copy-mode {{{

bind [ copy-mode
bind P paste-buffer

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# }}}

# keybindings/scrollback {{{

bind -T root WheelUpPane  if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# }}}

# status bar {{{

set-option -g status-position top

set-option -g pane-active-border-style fg=white,bg=default
set-option -g pane-border-style fg=black,bg=default

set-option -g message-style bg=black,fg=white

set-option -g message-command-style bg=yellow,fg=yellow

set-option -g status-style bg=black,fg=white

set-option -g status "on"

set-option -g status-left "#[fg=black,bg=cyan, bold] #S "
set-option -g status-right ""

set-window-option -g window-status-current-format "#[fg=black,bg=white] #W "
set-window-option -g window-status-format "#[fg=white,bg=black] #W "

# }}}

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'egel/tmux-gruvbox'

# run -b '~/.tmux/plugins/tpm/tpm'

