#!/bin/sh

inflipx() {
	case "$(pwd)" in
		/home/kesav/projects/flipx-io/*) true ;;
		*) false ;;
	esac
}

case "$1" in
	log)
		git log --color=always --format='%h %s' |
			fzf --with-nth=2.. |
			cut -d' ' -f1 |
			xargs -r git diff
		;;
	checkout)
		# filter out origin/HEAD and origin/main
		branch="$(git branch --all --format '%(refname:short)' |
			grep -v origin/HEAD |
			grep -v origin/master |
			grep -v origin/main |
			fzf --exit-0 --select-1)"
		case "$branch" in
			'') ;;
			origin*) git checkout --track "$branch" ;;
			*) git checkout "$branch" ;;
		esac
		;;
	remove)
		git branch | tr -d '* ' | fzf -m | xargs -r git branch -D
		;;
	push)
		ssh-add -L >/dev/null || ssh-add
		branch="$(git rev-parse --abbrev-ref HEAD)"
		case "$(pwd)" in
			/home/kesav/projects/flipx-io/*)
				[ "$branch" = main ] &&
					echo Cannot push to master in flipx-io workspace. &&
					exit 1
				;;
		esac
		git ls-remote --exit-code --heads origin "$branch" >/dev/null &&
			git push ||
			git push --set-upstream origin "$branch"
		;;
	push_force)
		ssh-add -L >/dev/null || ssh-add
		branch="$(git rev-parse --abbrev-ref HEAD)"
		case "$(pwd)" in
			/home/kesav/projects/flipx-io/*)
				[ "$branch" = main ] &&
					echo Cannot push to master in flipx-io workspace. &&
					exit 1
				;;
		esac
		git ls-remote --exit-code --heads origin "$branch" >/dev/null &&
			git push --force ||
			echo $branch does not exist
		;;
esac

# merge)
# 	branch="$(git branch --show-current)"
# 	[ "$branch" != master ] && git checkout master && git merge "$branch"
# 	;;
