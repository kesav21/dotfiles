#!/bin/sh

case "$1" in
	log)
		git log --color=always --format='%h %s' |
			fzf --with-nth=2.. |
			cut -d' ' -f1 |
			xargs -r git diff
		;;
	checkout)
		# filter out origin and origin/HEAD
		branch="$(git branch --all --format '%(refname:short)' |
			grep -v origin |
			grep -v origin/HEAD |
			fzf --exit-0 --select-1)"
		case "$branch" in
			'') ;;
			origin*) git checkout --track "$branch" ;;
			*) git checkout "$branch" ;;
		esac
		;;
	remove)
		git branch --format '%(refname:short)' |
			fzf -m |
			xargs -r git branch -D
		;;
	push)
		branch="$(git rev-parse --abbrev-ref HEAD)"
		git ls-remote --exit-code --heads origin "$branch" >/dev/null &&
			git push ||
			git push --set-upstream origin "$branch"
		;;
	push_force)
		branch="$(git rev-parse --abbrev-ref HEAD)"
		git ls-remote --exit-code --heads origin "$branch" >/dev/null &&
			git push --force ||
			echo $branch does not exist
		;;
	upload)
		git add .
		git commit -m 'make changes'
		branch="$(git rev-parse --abbrev-ref HEAD)"
		git ls-remote --exit-code --heads origin "$branch" >/dev/null &&
			git push ||
			git push --set-upstream origin "$branch"
		;;
esac

# merge)
# 	branch="$(git branch --show-current)"
# 	[ "$branch" != master ] && git checkout master && git merge "$branch"
# 	;;
