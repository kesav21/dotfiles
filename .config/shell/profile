#!/bin/sh

echo "sourced profile"

# set system env variables

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass

export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java

export GTK_RC_FILES="$XDG_CONFIG_HOME/gtk-1.0/gtkrc"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

export PYLINTHOME="$XDG_CACHE_HOME/pylint"
export IPYTHONDIR="$XDG_CONFIG_HOME/jupyter"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"

export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export NVM_DIR="$XDG_DATA_HOME"/nvm

export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc

export EDITOR=/usr/bin/nvim
export BAT_THEME="Gruvbox-N"
export ZPLUG_HOME="$HOME/.local/src/zplug"

# set my env variables

export ICONPATH="$HOME/.icons/fa-5.10.2-desktop"
export SCRIPTSPATH="$HOME/.local/scripts"
export BINPATH="$HOME/.local/bin"

# add local scripts to PATH

bin_in_path=$(echo "$PATH" | grep "$BINPATH")
# if bin is not in path, add bin to path
[ -z "$bin_in_path" ] && PATH="$PATH:$BINPATH"

# set colored output

alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias ls='ls --color=always'

# colored man pages

# export LESS=-R
# export LESS_TERMCAP_mb="$(printf '%b' '')"
# export LESS_TERMCAP_md="$(printf '%b' '')"
# export LESS_TERMCAP_me="$(printf '%b' '')"
# export LESS_TERMCAP_so="$(printf '%b' '')"
# export LESS_TERMCAP_se="$(printf '%b' '')"
# export LESS_TERMCAP_us="$(printf '%b' '')"
# export LESS_TERMCAP_ue="$(printf '%b' '')"

# set up node version manager
export NVM_SOURCE="/usr/share/nvm"                     # The AUR package installs it to here.
[ -s "$NVM_SOURCE/nvm.sh" ] && . "$NVM_SOURCE/nvm.sh"  # Load NVMource /usr/share/nvm/init-nvm.sh

# set up fzf

# export FZF_DEFAULT_COMMAND='find .'
export FZF_DEFAULT_COMMAND='find . -type f | grep -v '\.git/' | grep -v '__pycache__/' | grep -v '\.pytest_cache' | grep -v '\.env''

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' --reverse'
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' --color=fg:#a89984,bg:#282828,hl:#83a598 --color=fg+:#ebdbb2,bg+:#262626,hl+:#83a598 --color=info:#afaf87,prompt:#cc241d,pointer:#d3869b --color=marker:#8ec07c,spinner:#d3869b,header:#83a598'

# start x

if systemctl -q is-active graphical.target && [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]
then
	exec startx "$XDG_CONFIG_HOME/X11/xinitrc"
fi

export GPG_TTY=$(tty)

