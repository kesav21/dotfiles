#!/bin/sh

# vim: set foldmethod=marker:

echo "sourced aliases"

# misc {{{

alias ..="cd .."

alias v='fzf -m | xargs -r nvim'
alias vf="vifm_run . ~"

alias nview="ll /home/kesav/.local/share/nvim/swap"
alias nclear="sudo rm /home/kesav/.local/share/nvim/swap/*"

alias t="tree -a -I '.git|__pycache__|.pytest_cache|.env'"

alias ll="ls -AlF --color=always"
alias nuke="sudo rm -rf"

alias ytu="sudo youtube-dl -U"
alias yta="youtube-dl -f bestaudio"

alias me="monitor_extend"
alias md="monitor_disconnect"

alias mi="sudo make install"
alias mic="sudo make install && make clean"

alias vc='virtualenv --no-site-packages -p $(which python3) .env'
alias va="source .env/bin/activate"
alias vd="deactivate"

alias xm="xmodmap $(readlink -f ~/.config/X/.Xmodmap)"

# compile latex file and delete output files (except for pdf)
lc() {
	pdflatex $1
	pdflatex $1
	rm *.log
	rm *.aux
	rm *.toc
}

# get size of directory
dirsize () {
	du -h --max-depth=1 | sort -hr
}

# print out path neatly
path () {
	sed 's/:/\n/g' <<< "$PATH"
}

# reload Xresources
refresh () {
	xrdb -merge ~/.Xresources
	exit
}

# }}}

# bookmarks {{{

# navigate to bookmarked directory
cdb () {
	cd $(awk '/#/ {next} NF {print $2}' ~/.config/bmdirs | fzf | sed "s|\~|$HOME|g")
}

# open bookmarked file
vb () {
	file=$(awk '/#/ {next} NF {print $2}' ~/.config/bmfiles | fzf | sed "s|\~|$HOME|g")
	if [ -n "$file" ]
	then
		$EDITOR "$file"
	fi
}

# }}}

# git {{{

alias gis="clear && git status"
alias gic="git commit -S"

# git checkout branch
gich() {
  local branches branch
  branches=$(git --no-pager branch -vv) &&
  branch=$(echo "$branches" | fzf +m) &&
  git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}

alias gichm="git checkout master"
alias gim="git merge"
alias gib="git branch"
alias gip="git push"

# git log pretty
alias gil="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

# git diff unstaged file
alias gid='clear && git diff $(git diff --name-only | fzf -m)'
# git view staged changes
alias gids="git diff --staged"

# git add all
alias giaa="git add ."

# git add unstaged/untracked file
gia () {
	all=$(git diff --name-only && git ls-files --others --exclude-standard)
	git add $(printf '%s\n' "${all[@]}" | fzf -m)
}

# }}}

